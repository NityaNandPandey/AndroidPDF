<api>
<package name="com.pdftron.common"
>
<class name="Matrix2D"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Matrix2D"
 type="com.pdftron.common.Matrix2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Matrix2D"
 type="com.pdftron.common.Matrix2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getA"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getB"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getC"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getD"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getH"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getV"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="identityMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="inverse"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="multPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_x" type="double">
</parameter>
<parameter name="in_y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="multiply"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotationMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="angle" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="scale"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setA"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setB"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setD"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setH"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setV"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="translate"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="zeroMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFNetException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFNetException"
 type="com.pdftron.common.PDFNetException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cond_expr" type="java.lang.String">
</parameter>
<parameter name="line_number" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<parameter name="function" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PDFNetException"
 type="com.pdftron.common.PDFNetException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cond_expr" type="java.lang.String">
</parameter>
<parameter name="line_number" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<parameter name="function" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="error_code" type="long">
</parameter>
</constructor>
<method name="getCondExpr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getErrorCode"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFunction"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="cond_expr"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="e_error_credentials"
 type="long"
 transient="false"
 volatile="false"
 value="2L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_general"
 type="long"
 transient="false"
 volatile="false"
 value="0L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_network"
 type="long"
 transient="false"
 volatile="false"
 value="1L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_num"
 type="long"
 transient="false"
 volatile="false"
 value="3L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="error_code"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="file_name"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="function"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="line_number"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="message"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="PDFNetIterator"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Iterator">
</implements>
<constructor name="PDFNetIterator"
 type="com.pdftron.common.PDFNetIterator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="Clone"
 return="long"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Next"
 return="long"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="NextD"
 return="long"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="clone"
 return="java.lang.Object"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="remove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="impl"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="RecentlyUsedCache"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RecentlyUsedCache"
 type="com.pdftron.common.RecentlyUsedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="accessDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="accessDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="getBitmapPathIfExists"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="initializeRecentlyUsedCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num_documents" type="long">
</parameter>
<parameter name="max_absolute_space" type="long">
</parameter>
<parameter name="max_percentage_space" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="renameDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_path" type="java.lang.String">
</parameter>
<parameter name="new_path" type="java.lang.String">
</parameter>
</method>
<method name="resetCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="com.pdftron.fdf"
>
<class name="FDFDoc"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfdoc" type="com.pdftron.sdf.SDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFromXFDF"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFDF"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.fdf.FDFFieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.fdf.FDFFieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoot"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command_file" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command_file" type="java.lang.String">
</parameter>
<parameter name="permitted_user" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFFileName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFField"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FDFField"
 type="com.pdftron.fdf.FDFField"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="fdf_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFFieldIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="com.pdftron.filters"
>
<class name="ASCII85Encode"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="line_width" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="line_width" type="long">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="CustomFilter"
 extends="com.pdftron.filters.Filter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CustomFilter"
 type="com.pdftron.filters.CustomFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="CustomFilter"
 type="com.pdftron.filters.CustomFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attached" type="com.pdftron.filters.Filter">
</parameter>
</constructor>
<method name="close"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserObject"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTruncate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="new_size" type="long">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<field name="APPEND_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="READ_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_CUR"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_END"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_SET"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="TAG"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;save CustomFilter&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="WRITE_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="callback_data"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="FileDescriptorFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<constructor name="FileDescriptorFilter"
 type="com.pdftron.filters.FileDescriptorFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="pfd" type="android.os.ParcelFileDescriptor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FileDescriptorFilter"
 type="com.pdftron.filters.FileDescriptorFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="fileDescriptorFilter" type="com.pdftron.filters.FileDescriptorFilter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FileDescriptorFilter"
 type="com.pdftron.filters.FileDescriptorFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="prev" type="com.pdftron.filters.FileDescriptorFilter">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.filters.FileDescriptorFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="prev" type="com.pdftron.filters.FileDescriptorFilter">
</parameter>
</method>
<method name="canWriteOnInputFilter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createOutputIterator"
 return="com.pdftron.filters.FileDescriptorFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThreadId"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="switchToWriteMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="TAG"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;SaveFilter&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="mFileChannel"
 type="java.nio.channels.FileChannel"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mFilterManager"
 type="com.pdftron.filters.FileDescriptorFilterManager"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mIsInputChannel"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mLock"
 type="java.nio.channels.FileLock"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mMode"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mMySequenceNumber"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mPfd"
 type="android.os.ParcelFileDescriptor"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mPosition"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="FileDescriptorFilterManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileDescriptorFilterManager"
 type="com.pdftron.filters.FileDescriptorFilterManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="acquireLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addReadFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.CustomFilter">
</parameter>
</method>
<method name="addReadWriteFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.CustomFilter">
</parameter>
</method>
<method name="cleanup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNewSequenceNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="releaseLock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeReadFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.CustomFilter">
</parameter>
</method>
<method name="removeReadWriteFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.CustomFilter">
</parameter>
</method>
</class>
<class name="FileDescriptorReadOnlyFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<constructor name="FileDescriptorReadOnlyFilter"
 type="com.pdftron.filters.FileDescriptorReadOnlyFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="pfd" type="android.os.ParcelFileDescriptor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FileDescriptorReadOnlyFilter"
 type="com.pdftron.filters.FileDescriptorReadOnlyFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="fileDescriptorFilter" type="com.pdftron.filters.FileDescriptorReadOnlyFilter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<field name="mFileChannel"
 type="java.nio.channels.FileChannel"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mFilterManager"
 type="com.pdftron.filters.FileDescriptorFilterManager"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mIsInputChannel"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mLock"
 type="java.nio.channels.FileLock"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mMode"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mMySequenceNumber"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mPfd"
 type="android.os.ParcelFileDescriptor"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mPosition"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="Filter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Filter"
 type="com.pdftron.filters.Filter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attached" type="com.pdftron.filters.Filter">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attached" type="com.pdftron.filters.Filter">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRefHandle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attach_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canSeek"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createInputIterator"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSourceFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isInputFilter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="releaseAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStreamLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="size"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="append" type="boolean">
</parameter>
</method>
<field name="attached"
 type="com.pdftron.filters.Filter"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="impl"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="ref"
 type="java.lang.Object"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="FilterReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FilterReader"
 type="com.pdftron.filters.FilterReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FilterReader"
 type="com.pdftron.filters.FilterReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="peek"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="read"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FilterWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FilterWriter"
 type="com.pdftron.filters.FilterWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FilterWriter"
 type="com.pdftron.filters.FilterWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeBuffer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeInt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeLine"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="line" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeUChar"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ch" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FlateEncode"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="compression_level" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="compression_level" type="int">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="MappedFile"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MappedFile"
 type="com.pdftron.filters.MappedFile"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="fileSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_append_mode"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_mode"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_write_mode"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="MemoryFilter"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MemoryFilter"
 type="com.pdftron.filters.MemoryFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf_sz" type="long">
</parameter>
<parameter name="is_input" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAsInputFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SecondaryFileFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SecondaryFileFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="treeUri" type="android.net.Uri">
</parameter>
<exception name="FileNotFoundException" type="java.io.FileNotFoundException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SecondaryFileFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="treeUri" type="android.net.Uri">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="FileNotFoundException" type="java.io.FileNotFoundException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SecondaryFileFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="attached" type="com.pdftron.filters.SecondaryFileFilter">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SecondaryFileFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attached" type="com.pdftron.filters.SecondaryFileFilter">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.filters.SecondaryFileFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="prev" type="com.pdftron.filters.SecondaryFileFilter">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="cleanup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createOutputIterator"
 return="com.pdftron.filters.SecondaryFileFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="force"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="metadata" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="getRawSequenceNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSequenceNumber"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="ZStandardCompressor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ZStandardCompressor"
 type="com.pdftron.filters.ZStandardCompressor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="compressionLevel" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="compressAsBase85"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="decompressBase85"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.helpers"
>
<class name="BitmapHelper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BitmapHelper"
 type="com.pdftron.helpers.BitmapHelper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createArrayFromBitmap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="android.graphics.Bitmap">
</parameter>
<parameter name="buf" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="drawInRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bitmap" type="android.graphics.Bitmap">
</parameter>
<parameter name="g" type="com.pdftron.helpers.Graphics">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="getBitmap"
 return="android.graphics.Bitmap"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="int[]">
</parameter>
</method>
<method name="getColor"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="arr" type="int[]">
</parameter>
</method>
<method name="getHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="android.graphics.Bitmap">
</parameter>
</method>
<method name="getWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="android.graphics.Bitmap">
</parameter>
</method>
</class>
<class name="BitmapHelper.CustomBitmap"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CustomBitmap"
 type="com.pdftron.helpers.BitmapHelper.CustomBitmap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</constructor>
<constructor name="CustomBitmap"
 type="com.pdftron.helpers.BitmapHelper.CustomBitmap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="inputBitmap" type="android.graphics.Bitmap">
</parameter>
</constructor>
<method name="finalize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="bitmap"
 type="android.graphics.Bitmap"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="bitmapArray"
 type="int[]"
 transient="false"
 volatile="false"
 value="null"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="DoubleRectangle2D"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DoubleRectangle2D"
 type="com.pdftron.helpers.DoubleRectangle2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="DoubleRectangle2D"
 type="com.pdftron.helpers.DoubleRectangle2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
</constructor>
<field name="height"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="width"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="x"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="y"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Graphics"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Graphics"
 type="com.pdftron.helpers.Graphics"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
</package>
<package name="com.pdftron.pdf"
>
<class name="Action"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Action"
 type="com.pdftron.pdf.Action"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="Execute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNext"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__Create"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createGoto"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGoto"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGotoRemote"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGotoRemote"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="new_window" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createHideField"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="field_list" type="java.lang.String[]">
</parameter>
</method>
<method name="createImportData"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="createJavaScript"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="script" type="java.lang.String">
</parameter>
</method>
<method name="createLaunch"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="createResetForm"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="createSubmitForm"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createURI"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="uri" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="executeKeyStrokeAction"
 return="com.pdftron.pdf.KeyStrokeActionResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.pdf.KeyStrokeEventData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDest"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFormActionFlag"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="needsWriteLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFormActionFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_GoTo"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoTo3DView"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoToE"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoToR"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Hide"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ImportData"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_JavaScript"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Launch"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Movie"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Named"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Rendition"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ResetForm"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SetOCGState"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sound"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SubmitForm"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Thread"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Trans"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_URI"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_canonical_format"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_embed_form"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_excl_F_key"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_excl_non_user_annots"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_exclude"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_export_format"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_get_method"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_annotations"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_append_saves"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_no_value_fields"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_submit_coordinates"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_submit_pdf"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ActionParameter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ActionParameter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnalyticsHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AnalyticsHandlerCallback"
 type="com.pdftron.pdf.AnalyticsHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandleReport"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="report_type" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="payload" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Annot"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Annot"
 type="com.pdftron.pdf.Annot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Annot"
 type="com.pdftron.pdf.Annot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Annot"
 type="com.pdftron.pdf.Annot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</constructor>
<method name="GetStructParent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__Create"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getActiveAppearanceState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderStyle"
 return="com.pdftron.pdf.Annot.BorderStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsCMYK"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsGray"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsRGB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContents"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptionalContent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUniqueID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibleContentBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isMarkup"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="resize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setActiveAppearanceState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="astate" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bs" type="com.pdftron.pdf.Annot.BorderStyle">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContents"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateToNow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOptionalContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oc" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rot" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStructParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyval" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUniqueID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_3D"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Caret"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Circle"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FileAttachment"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeText"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Highlight"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Ink"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Line"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Link"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Movie"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Polygon"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Polyline"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Popup"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PrinterMark"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Projection"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Redact"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RichMedia"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Screen"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sound"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Square"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Squiggly"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Stamp"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_StrikeOut"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TrapNet"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Underline"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Watermark"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Widget"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_activate"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_blur"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_down"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_enter"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_exit"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_focus"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_close"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_invisible"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_open"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_visible"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_up"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_down"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_hidden"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invisible"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_locked"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_locked_contents"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_rotate"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_view"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_zoom"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_normal"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_only"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rollover"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle_no_view"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Annot.BorderStyle"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BorderStyle"
 type="com.pdftron.pdf.Annot.BorderStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="BorderStyle"
 type="com.pdftron.pdf.Annot.BorderStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<parameter name="b_dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDash"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDash"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_beveled"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dashed"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_inset"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_solid"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_underline"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="AssertHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AssertHandlerCallback"
 type="com.pdftron.pdf.AssertHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandleAssert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="condition" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
</method>
</class>
<class name="BlackBoxContext"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BlackBoxContext"
 type="com.pdftron.pdf.BlackBoxContext"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="doOperation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instructions" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_failure"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_incomplete"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_success"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Bookmark"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Bookmark"
 type="com.pdftron.pdf.Bookmark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Bookmark"
 type="com.pdftron.pdf.Bookmark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="addChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addChild"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addNext"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addNext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addPrev"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addPrev"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlags"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIndent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNext"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpenCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrev"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitleObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasChildren"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_r" type="double">
</parameter>
<parameter name="in_g" type="double">
</parameter>
<parameter name="in_b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlags"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_flags" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlink"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CancelFlag"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CancelFlag"
 type="com.pdftron.pdf.CancelFlag"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="boolean">
</parameter>
</method>
</class>
<class name="CharData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCharCode"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphX"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphY"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CharIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.CharData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ColorPt"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="colorant_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="colorant_index" type="int">
</parameter>
<parameter name="colorant_value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorantNum"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ColorSpace"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColorSpace"
 type="com.pdftron.pdf.ColorSpace"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color_space" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="convert2CMYK"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert2Gray"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert2RGB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceCMYK"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceGray"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceRGB"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromBuffer"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromFile"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromFilter"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createPattern"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAlternateColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color_idx" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs_type" type="int">
</parameter>
<parameter name="cs" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLookupTable"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTintFunction"
 return="com.pdftron.pdf.Function"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="out_colorants" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initComponentRanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="out_decode_low" type="double[]">
</parameter>
<parameter name="out_decode_range" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNone"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_cal_gray"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_cal_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_cmyk"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_gray"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_n"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_icc"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_indexed"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lab"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_separation"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ContentReplacer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ContentReplacer"
 type="com.pdftron.pdf.ContentReplacer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="target_region" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="replacement_image" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="template_text" type="java.lang.String">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="target_region" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMatchStrings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start_str" type="java.lang.String">
</parameter>
<parameter name="end_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Convert"
 type="com.pdftron.pdf.Convert"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="appendUniversalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="initial_conversion" type="com.pdftron.pdf.DocumentConversion">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendUniversalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="initial_conversion" type="com.pdftron.pdf.DocumentConversion">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createBlackBoxContext"
 return="com.pdftron.pdf.BlackBoxContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="text_options" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="requiresPrinter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="in_options" type="com.pdftron.pdf.Convert.SVGOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="in_options" type="com.pdftron.pdf.Convert.SVGOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.TiffOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.TiffOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XPSOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_inputFilename" type="java.lang.String">
</parameter>
<parameter name="in_outputFilename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_inputFilename" type="java.lang.String">
</parameter>
<parameter name="in_outputFilename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XPSOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="universalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="universalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fast"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_high_quality"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_all"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_most"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_simple"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_strict"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_very_strict"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.EPUBOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EPUBOutputOptions"
 type="com.pdftron.pdf.Convert.EPUBOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setExpanded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="expanded" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setReuseCover"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reuse" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert.HTMLOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HTMLOutputOptions"
 type="com.pdftron.pdf.Convert.HTMLOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefer_jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setReflow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reflow" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSimplifyText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert.SVGOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SVGOutputOptions"
 type="com.pdftron.pdf.Convert.SVGOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCompress"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="svgz" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreateXmlWrapper"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xml" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDtd"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dtd" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEmbedFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEmbedImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed_images" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatten" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIndividualCharPlacement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="individual_char_placement" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNoFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="no_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNoUnicode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="no_unicode" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include_thumbs" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRemoveCharPlacement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remove_char_placement" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSvgFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="svg_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.TiffOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TiffOutputOptions"
 type="com.pdftron.pdf.Convert.TiffOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCMYK"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDither"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gamma" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGray"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHRes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hres" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMono"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_desc" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPalettized"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintmode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rotate" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmooth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransparentPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVRes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vres" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_art"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bleed"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_crop"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_media"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trim"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XODOutputOptions"
 extends="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XODOutputOptions"
 type="com.pdftron.pdf.Convert.XODOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="UseSilverlightFlashCompatible"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="compatible" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAnnotationOutput"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_output" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setElementLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element_limit" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEncryptPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExternalParts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="generate" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatten" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacityMaskWorkaround"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include_thumbs" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefer_jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSilverlightTextWorkaround"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="workaround" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="regular_size" type="int">
</parameter>
<parameter name="large_size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_external_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatten"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_internal_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XPSOutputCommonOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XPSOutputCommonOptions"
 type="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateURLLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="generate" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="print_mode" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThickenLines"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="thicken" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XPSOutputOptions"
 extends="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XPSOutputOptions"
 type="com.pdftron.pdf.Convert.XPSOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setOpenXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="openxps" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CubicCurveBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CubicCurveBuilder"
 type="com.pdftron.pdf.CubicCurveBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addSourcePoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCubicXCoord"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCubicYCoord"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="numCubicPoints"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="numSourcePoints"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Date"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="year" type="short">
</parameter>
<parameter name="month" type="byte">
</parameter>
<parameter name="day" type="byte">
</parameter>
<parameter name="hour" type="byte">
</parameter>
<parameter name="minute" type="byte">
</parameter>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDay"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMinute"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMonth"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSecond"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUT"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUTHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUTMinutes"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getYear"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seUTMinutes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut_minutes" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrentTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDay"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="day" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMinute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minute" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMonth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="month" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecond"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUT"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUTHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut_hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setYear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="year" type="short">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Destination"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Destination"
 type="com.pdftron.pdf.Destination"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="createFit"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitB"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitBH"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitBV"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitH"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitR"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="bottom" type="double">
</parameter>
<parameter name="right" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitV"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createXYZ"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExplicitDestObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Fit"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitB"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitBH"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitBV"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitH"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitR"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitV"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_XYZ"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="DocumentConversion"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DocumentConversion"
 type="com.pdftron.pdf.DocumentConversion"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelConversion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convertNextPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getConversionStatus"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getErrorString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumConvertedPages"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumWarnings"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProgress"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProgressLabel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWarningString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasProgressTracking"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCancelled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryConvert"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_failure"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_incomplete"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_success"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="DocumentPreviewCache"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DocumentPreviewCache"
 type="com.pdftron.pdf.DocumentPreviewCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="cancelAllRequests"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRequest"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepathOrUuid" type="java.lang.String">
</parameter>
</method>
<method name="clearCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createBitmapWithID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="min_x_size" type="int">
</parameter>
<parameter name="min_y_size" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.PreviewHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="createBitmapWithID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="min_x_size" type="int">
</parameter>
<parameter name="min_y_size" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.PreviewHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="getBitmapWithID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="min_x_size" type="int">
</parameter>
<parameter name="min_y_size" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.PreviewHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="getBitmapWithID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="min_x_size" type="int">
</parameter>
<parameter name="min_y_size" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.PreviewHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="getBitmapWithPath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<parameter name="min_x_size" type="int">
</parameter>
<parameter name="min_y_size" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.PreviewHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_cache_bytes" type="long">
</parameter>
<parameter name="max_disk_percentage" type="double">
</parameter>
</method>
<method name="irrelevantChangeMade"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Element"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCTM"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharIterator"
 return="com.pdftron.pdf.CharIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGState"
 return="com.pdftron.pdf.GState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCPropertyDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCTag"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNewTextLineOffset"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParentStructElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPathData"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPosAdjustment"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShading"
 return="com.pdftron.pdf.Shading"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getXObject"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTextMatrix"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isClipWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isClippingPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFilled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOCVisible"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isStroked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setClipWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNewTextLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clip" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.pdf.PathData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathStroke"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stroke" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPosAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="adjust" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="updateTextMetrics"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_form"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_group_begin"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_group_end"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_image"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_inline_image"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_begin"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_end"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_point"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_path"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_shading"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_begin"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_end"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_new_line"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ElementBuilder"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementBuilder"
 type="com.pdftron.pdf.ElementBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="arcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="start" type="double">
</parameter>
<parameter name="extent" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="arcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xr" type="double">
</parameter>
<parameter name="yr" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="isLargeArc" type="boolean">
</parameter>
<parameter name="sweep" type="boolean">
</parameter>
<parameter name="endX" type="double">
</parameter>
<parameter name="endY" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="closePath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createEllipse"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="form" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGroupBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGroupEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="hscale" type="double">
</parameter>
<parameter name="vscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createPath"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="points" type="double[]">
</parameter>
<parameter name="seg_types" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createRect"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createShading"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sh" type="com.pdftron.pdf.Shading">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextNewLine"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextNewLine"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createUnicodeTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="curveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx1" type="double">
</parameter>
<parameter name="cy1" type="double">
</parameter>
<parameter name="cx2" type="double">
</parameter>
<parameter name="cy2" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ellipse"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lineTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="moveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pathBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pathEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gs" type="com.pdftron.pdf.GState">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ElementReader"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementReader"
 type="com.pdftron.pdf.ElementReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clearChangeList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="current"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="end"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="formBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getChangesIterator"
 return="com.pdftron.pdf.GSChangesIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorSpace"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getExtGState"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPattern"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getShading"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getXObject"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="isChanged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gstate_attrib" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="next"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="patternBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill_pattern" type="boolean">
</parameter>
<parameter name="reset_ctm_tfm" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="patternBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill_pattern" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="type3FontBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_data" type="com.pdftron.pdf.CharData">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="type3FontBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_data" type="com.pdftron.pdf.CharData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ElementWriter"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementWriter"
 type="com.pdftron.pdf.ElementWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="streamobj_to_update" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="streamobj_to_update" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="end"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeBuffer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writePlacedElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_overlay"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_replacement"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_underlay"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="ErrorReportProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="reportError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="ExternalAnnotManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ExternalAnnotManager"
 type="com.pdftron.pdf.ExternalAnnotManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextRedoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextUndoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="jumpToAnnotWithID"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_content" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="redo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="takeSnapshot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="payload" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="undo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Field"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Field"
 type="com.pdftron.pdf.Field"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="eraseAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findInheritedAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultAppearance"
 return="com.pdftron.pdf.GState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getJustification"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMaxLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opt_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUpdateRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValueAsBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAnnot"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rename"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJustification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="j" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaxLen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_len" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_checked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="useSignatureHandler"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_action_trigger_calculate"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_format"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_keystroke"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_validate"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_button"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_centered"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_check"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_choice"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_comb"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_combo"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_commit_on_sel_change"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_edit"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_file_select"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_left_justified"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_multiline"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_multiselect"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_export"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_scroll"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_spellcheck"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_password"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_pushbutton_flag"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radio"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radio_flag"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radios_in_unison"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_only"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_required"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rich_text"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_right_justified"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_signature"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_sort"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle_to_off"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FieldIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="FileSpec"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileSpec"
 type="com.pdftron.pdf.FileSpec"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="f" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createURL"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDesc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="desc" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Flattener"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Flattener"
 type="com.pdftron.pdf.Flattener"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="Process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fast"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_all"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_most"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_simple"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_strict"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_very_strict"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Font"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Font"
 type="com.pdftron.pdf.Font"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Font"
 type="com.pdftron.pdf.Font"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="GetDescriptor"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="from" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createType1Font"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createType1Font"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAscent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharCodeIterator"
 return="com.pdftron.pdf.FontCharCodeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDescent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFontBufSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEncoding"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFamilyName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphPath"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<parameter name="conics2cubics" type="boolean">
</parameter>
</method>
<method name="getGlyphPath"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<parameter name="conics2cubics" type="boolean">
</parameter>
<parameter name="transform" type="com.pdftron.common.Matrix2D">
</parameter>
</method>
<method name="getMaxWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMissingWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStandardType1FontType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType3FontMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType3GlyphStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
</method>
<method name="getUnitsPerEm"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAllCap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCFF"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEmbedded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFixedWidth"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isForceBold"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isHorizontalMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSimple"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSymbolic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mapToUnicode"
 return="char[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_CIDType0"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CIDType2"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_IdentityH"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Indices"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_MMType1"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TrueType"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type0"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type1"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type3"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_bold"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_bold_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_bold"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_bold_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_symbol"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_bold"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_bold_italic"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_italic"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_roman"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_zapf_dingbats"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FontCharCodeIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Function"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Function"
 type="com.pdftron.pdf.Function"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="funct_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="eval"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOutputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_exponential"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postscript"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_sampled"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stitching"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="GSChangesIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="java.lang.Integer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="GState"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetStrokePattern"
 return="com.pdftron.pdf.PatternColor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAISFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAutoStrokeAdjust"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlackGenFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDashes"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillPattern"
 return="com.pdftron.pdf.PatternColor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlatness"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHalftone"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHorizontalScale"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeading"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineCap"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineJoin"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMiterLimit"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverprintMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPhase"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmoothnessTolerance"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoftMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoftMaskTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextRenderMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextRise"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTransferFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUCRFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWordSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isTextKnockout"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAISFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="AIS" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAutoStrokeAdjust"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SA" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlackGenFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="BG" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlendMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="BM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCharSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDashPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dash_array" type="double[]">
</parameter>
<parameter name="phase" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ca" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlatness"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatness" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHalftone"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="HT" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHorizontalScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeading"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="leading" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineCap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cap" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineJoin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="join" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMiterLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="miter_limit" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="OPM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderingIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmoothnessTolerance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SM" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SM" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="CA" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="OP" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextKnockout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="knockout" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextRenderMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rmode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextRise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rise" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransferFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="TR" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUCRFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="UCR" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWordSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="word_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_BG_funct"
 type="int"
 transient="false"
 volatile="false"
 value="33"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UCR_funct"
 type="int"
 transient="false"
 volatile="false"
 value="34"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_absolute_colorimetric"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_alpha_is_shape"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_auto_stoke_adjust"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bevel_join"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color_burn"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color_dodge"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_compatible"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_darken"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_difference"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_exclusion"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_hard_light"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_hue"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_lighten"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_luminosity"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_multiply"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_normal"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_overlay"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_saturation"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_screen"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_soft_light"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_blend_mode"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_butt_cap"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_char_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dash_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_color"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_cs"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_overprint"
 type="int"
 transient="false"
 volatile="false"
 value="30"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_stroke_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_stroke_text"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatness"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font_size"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_halftone"
 type="int"
 transient="false"
 volatile="false"
 value="35"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_scale"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invisible_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_leading"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_cap"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_join"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_width"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_miter_join"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_miter_limit"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="36"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_opacity_fill"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_opacity_stroke"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_overprint_mode"
 type="int"
 transient="false"
 volatile="false"
 value="31"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_perceptual"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_relative_colorimetric"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rendering_intent"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_round_cap"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_round_join"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_saturation"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_smoothnes"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_soft_mask"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_square_cap"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_color"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_cs"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_overprint"
 type="int"
 transient="false"
 volatile="false"
 value="29"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_text"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_knockout"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_pos_offset"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_render_mode"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_rise"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_transfer_funct"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_transform"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_word_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Highlights"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Highlights"
 type="com.pdftron.pdf.Highlights"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Highlights"
 type="com.pdftron.pdf.Highlights"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other_impl" type="long">
</parameter>
</constructor>
<method name="add"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hlts" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPageNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="load"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_name" type="java.lang.String">
</parameter>
</method>
<method name="next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_name" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Image"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Image"
 type="com.pdftron.pdf.Image"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="bmp" type="android.graphics.Bitmap">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitmap"
 return="android.graphics.Bitmap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSoftMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_mask" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mask" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="soft_mask" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_ascii_hex"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_g3"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_g4"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jp2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Image.Compat"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Compat"
 type="com.pdftron.pdf.Image.Compat"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="GetRawImageData"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
</class>
<class name="Image2RGB"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="clearList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Image2RGBA"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="clearList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="JavaScriptEventProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="handleEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="event_type" type="java.lang.String">
</parameter>
<parameter name="json" type="java.lang.String">
</parameter>
<parameter name="user_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="KeyStrokeActionResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="KeyStrokeEventData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="KeyStrokeEventData"
 type="com.pdftron.pdf.KeyStrokeEventData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="current_value" type="java.lang.String">
</parameter>
<parameter name="change" type="java.lang.String">
</parameter>
<parameter name="selection_start" type="int">
</parameter>
<parameter name="selection_end" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="LogMessageHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LogMessageHandlerCallback"
 type="com.pdftron.pdf.LogMessageHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandlerLogMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="severity" type="int">
</parameter>
<parameter name="stream" type="java.lang.String">
</parameter>
<parameter name="msg" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
</method>
</class>
<class name="Optimizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="optimize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="optimize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="optimizer_settings" type="com.pdftron.pdf.Optimizer.OptimizerSettings">
</parameter>
</method>
</class>
<class name="Optimizer.ImageSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ImageSettings"
 type="com.pdftron.pdf.Optimizer.ImageSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="forceChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="forceRecompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="setCompressionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDownsampleMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maximum" type="double">
</parameter>
<parameter name="resampling" type="double">
</parameter>
</method>
<method name="setQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="long">
</parameter>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg2000"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_retain"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Optimizer.MonoImageSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MonoImageSettings"
 type="com.pdftron.pdf.Optimizer.MonoImageSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="forceChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="forceRecompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="setCompressionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDownsampleMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maximum" type="double">
</parameter>
<parameter name="resampling" type="double">
</parameter>
</method>
<method name="setJBIG2Threshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jbig2_threshold" type="double">
</parameter>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jbig2"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Optimizer.OptimizerSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OptimizerSettings"
 type="com.pdftron.pdf.Optimizer.OptimizerSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="removeCustomEntries"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remove_custom" type="boolean">
</parameter>
</method>
<method name="setColorImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.ImageSettings">
</parameter>
</method>
<method name="setGrayscaleImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.ImageSettings">
</parameter>
</method>
<method name="setMonoImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.MonoImageSettings">
</parameter>
</method>
<method name="setTextSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.TextSettings">
</parameter>
</method>
</class>
<class name="Optimizer.TextSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSettings"
 type="com.pdftron.pdf.Optimizer.TextSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="embedFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed" type="boolean">
</parameter>
</method>
<method name="subsetFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subset" type="boolean">
</parameter>
</method>
</class>
<class name="PDFDoc"
 extends="com.pdftron.sdf.Doc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfdoc" type="com.pdftron.sdf.SDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="addFileAttachment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_key" type="java.lang.String">
</parameter>
<parameter name="embedded_file" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addHighlights"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hilite" type="java.lang.String">
</parameter>
</method>
<method name="addRootBookmark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="root_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler" type="com.pdftron.sdf.SignatureHandler">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addStdSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pkcs12_keyfile" type="java.lang.String">
</parameter>
<parameter name="pkcs12_keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addStdSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pkcs12_keybuffer" type="byte[]">
</parameter>
<parameter name="pkcs12_keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="extractFlag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_list" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotations" type="com.pdftron.pdf.Annot[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_added" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<parameter name="annot_modified" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<parameter name="annot_deleted" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfMerge"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fdf_doc" type="com.pdftron.fdf.FDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfUpdate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fdf_doc" type="com.pdftron.fdf.FDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="def_field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<parameter name="def_field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forms_only" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotationsAdvanced"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotationsAdvanced"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flattenModes" type="com.pdftron.pdf.PDFDoc.FlattenMode[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAcroForm"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDocInfo"
 return="com.pdftron.pdf.PDFDocInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.pdf.FieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.pdf.FieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstBookmark"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGConfig"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpenAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageIterator"
 return="com.pdftron.pdf.PageIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageIterator"
 return="com.pdftron.pdf.PageIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageLabel"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPages"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoot"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSecurityHandler"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSignatureHandler"
 return="com.pdftron.sdf.SignatureHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructTree"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="triggerMode" type="com.pdftron.pdf.PDFDoc.ActionTriggerMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getViewPrefs"
 return="com.pdftron.pdf.PDFDocViewPrefs"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasChangesSinceSnapshot"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasOC"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasRepairedXRef"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasSignatures"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="importPages"
 return="com.pdftron.pdf.Page[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pages" type="com.pdftron.pdf.Page[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importPages"
 return="com.pdftron.pdf.Page[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pages" type="com.pdftron.pdf.Page[]">
</parameter>
<parameter name="import_bookmarks" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isTagged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="user_id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDFString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="java.lang.String">
</parameter>
<parameter name="user_id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageCreate"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageCreate"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="media_box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="where" type="com.pdftron.pdf.PageIterator">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pagePushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pagePushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_itr" type="com.pdftron.pdf.PageIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshFieldAppearances"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removePageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeSignatureHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveIncrementalData"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpenAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="label" type="com.pdftron.pdf.PageLabel">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.sdf.SecurityHandler">
</parameter>
</method>
<method name="timedLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_action_trigger_doc_did_print"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_did_save"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_close"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_print"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_save"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_annots_only"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_both"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_all"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_annots_only"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_forms_only"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_link_only"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_forms_only"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_insert_bookmark"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="mCustomFilter"
 type="com.pdftron.filters.Filter"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDoc.ActionTriggerMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.ActionTriggerMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.ActionTriggerMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDoc.FlattenMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.FlattenMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.FlattenMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDoc.InsertBookmarkMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.InsertBookmarkMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.InsertBookmarkMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDocGenerator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="generateBlankPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateGraphPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="grid_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="weighted_line_thickness" type="double">
</parameter>
<parameter name="weighted_line_freq" type="int">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateGridPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="grid_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateLinedPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="line_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="left_margin_distance" type="double">
</parameter>
<parameter name="left_margin_red" type="double">
</parameter>
<parameter name="left_margin_green" type="double">
</parameter>
<parameter name="left_margin_blue" type="double">
</parameter>
<parameter name="right_margin_red" type="double">
</parameter>
<parameter name="right_margin_green" type="double">
</parameter>
<parameter name="right_margin_blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<parameter name="top_margin_distance" type="double">
</parameter>
<parameter name="bottom_margin_distance" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateMusicPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="margin" type="double">
</parameter>
<parameter name="staves" type="int">
</parameter>
<parameter name="linespace_size_pts" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFDocInfo"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDocInfo"
 type="com.pdftron.pdf.PDFDocInfo"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tr" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getAuthor"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAuthorObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreationDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreatorObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKeywords"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKeywordsObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getModDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProducer"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProducerObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubjectObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitleObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAuthor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="author" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="creation_date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="creator" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setKeywords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keywords" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setModDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mod_date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setProducer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="producer" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subject" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFDocViewPrefs"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDocViewPrefs"
 type="com.pdftron.pdf.PDFDocViewPrefs"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tr" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getDirection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLayoutMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNonFullScreenPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPref"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pref" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrintArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrintClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViewArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getViewClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDirection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="left_to_right" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitialPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLayoutMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="layout" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNonFullScreenPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPref"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pref" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_CenterWindow"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Default"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_DisplayDocTitle"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitWindow"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FullScreen"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideMenubar"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideToolbar"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideWindowUI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OneColumn"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SinglePage"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoColumnLeft"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoColumnRight"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoPageLeft"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoPageRight"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseAttachments"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseBookmarks"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseNone"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseOC"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseThumbs"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDocWithoutOwnership"
 extends="com.pdftron.pdf.PDFDoc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDocWithoutOwnership"
 type="com.pdftron.pdf.PDFDocWithoutOwnership"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDocWithoutOwnership"
 type="com.pdftron.pdf.PDFDocWithoutOwnership"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDocWithoutOwnership"
 type="com.pdftron.pdf.PDFDocWithoutOwnership"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDocWithoutOwnership"
 type="com.pdftron.pdf.PDFDocWithoutOwnership"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.PDFDocWithoutOwnership"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
</class>
<class name="PDFDraw"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDraw"
 type="com.pdftron.pdf.PDFDraw"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDraw"
 type="com.pdftron.pdf.PDFDraw"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="drawInRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="g" type="com.pdftron.helpers.Graphics">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="encoder_params" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitmap"
 return="android.graphics.Bitmap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="getBitmap"
 return="android.graphics.Bitmap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="image" type="android.graphics.Bitmap">
</parameter>
</method>
<method name="getByteBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="getIntBuffer"
 return="com.pdftron.pdf.PDFDraw.IntBufferData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setClipRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setErrorReportProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="error_proc" type="com.pdftron.pdf.ErrorReportProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlipYAxis"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flip_y" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
</method>
<method name="setImageSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="preserve_aspect_ratio" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="region" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageTransparent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_transparent" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRasterizerType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
</method>
<field name="e_bgr"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bgra"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_gray"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_gray_alpha"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rgba"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDraw.IntBufferData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="IntBufferData"
 type="com.pdftron.pdf.PDFDraw.IntBufferData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="data"
 type="int[]"
 transient="false"
 volatile="false"
 value="null"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="height"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="stride"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="width"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFNet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFNet"
 type="com.pdftron.pdf.PDFNet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="IsARM"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="IsARMv7"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addFontSubst"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="fontname" type="java.lang.String">
</parameter>
<parameter name="fontpath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addFontSubst"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="ordering" type="int">
</parameter>
<parameter name="fontpath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addResourceSearchPath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="enableJavaScript"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
</method>
<method name="getResourcesPath"
 return="java.lang.String"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSystemFontList"
 return="java.lang.String"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVersion"
 return="double"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasBeenInitialized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="resId" type="int">
</parameter>
<parameter name="license_key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isJavaScriptEnabled"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setColorManagement"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDeviceCMYKProfile"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icc_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDeviceRGBProfile"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icc_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDiskCachingEnabled"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_disk" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPersistentCachePath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="temp_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setResourcesPath"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="setTempPath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="temp_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewerCache"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_cache_size" type="int">
</parameter>
<parameter name="on_disk" type="boolean">
</parameter>
</method>
<method name="terminate"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_CNS1"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GB1"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Identity"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japan1"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japan2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Korea1"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_icm"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lcms"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_cms"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFNetInternalTools"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="checkDocIntegrity"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="configureLogFromJsonString"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="disableLogBackend"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backend" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableLogBackend"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backend" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultConfigFile"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFViewTileSummary"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLogSystemAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="logMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="logStreamMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<parameter name="stream" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="runUniversalConversionTests"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path_with_docs" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAnalyticsHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.pdf.AnalyticsHandlerCallback">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAssertHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.pdf.AssertHandlerCallback">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCutoffLogThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultLogThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLogFileName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="log_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLogLocation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="log_directory" type="java.lang.String">
</parameter>
<parameter name="log_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThresholdForLogStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream_name" type="java.lang.String">
</parameter>
<parameter name="stream_threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_callback"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_console"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_debug"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_debugger"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_disabled"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_disk"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fatal"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_info"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trace"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_warning"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFRasterizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFRasterizer"
 type="com.pdftron.pdf.PDFRasterizer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rasterize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="buffer" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<parameter name="clip" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rasterize"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="stride" type="int">
</parameter>
<parameter name="num_comps" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<parameter name="clip" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCancel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cancel" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessColors"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="white_color" type="int">
</parameter>
<parameter name="black_color" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMapFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_file_contents" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
</method>
<field name="e_postprocess_gradient_map"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_night_mode"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFViewCtrl"
 extends="android.view.ViewGroup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFViewCtrl"
 type="com.pdftron.pdf.PDFViewCtrl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="attrs" type="android.util.AttributeSet">
</parameter>
</constructor>
<constructor name="PDFViewCtrl"
 type="com.pdftron.pdf.PDFViewCtrl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="attrs" type="android.util.AttributeSet">
</parameter>
<parameter name="defStyle" type="int">
</parameter>
</constructor>
<method name="addDocumentDownloadListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.DocumentDownloadListener">
</parameter>
</method>
<method name="addDocumentLoadListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.DocumentLoadListener">
</parameter>
</method>
<method name="addOnCanvasSizeChangeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.OnCanvasSizeChangeListener">
</parameter>
</method>
<method name="addPageChangeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.PageChangeListener">
</parameter>
</method>
<method name="addThumbAsyncListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.ThumbAsyncListener">
</parameter>
</method>
<method name="addUniversalDocumentConversionListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.UniversalDocumentConversionListener">
</parameter>
</method>
<method name="canGotoNextPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="canGotoPreviousPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelAllThumbRequests"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="cancelFindText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRenderingAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="clearSelection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="clearThumbCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="closeDoc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="closeTool"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="convCanvasPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convCanvasPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convCanvasPtToScreenPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convCanvasPtToScreenPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="pageNumber" type="int">
</parameter>
</method>
<method name="convHorizontalScrollingPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convPagePtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convPagePtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convPagePtToHorizonalScrollingPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convPagePtToHorizontalScrollingPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convPagePtToScreenPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convScreenPtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convScreenPtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="pageNumber" type="int">
</parameter>
</method>
<method name="convScreenPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convScreenPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="docLock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cancel_rendering" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="docLockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="docTryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="docTryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="docUnlock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="docUnlockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="enableExternalAnnotManager"
 return="com.pdftron.pdf.ExternalAnnotManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="author_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableUndoRedo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="executeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="executeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action_param" type="com.pdftron.pdf.ActionParameter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="search_str" type="java.lang.String">
</parameter>
<parameter name="match_case" type="boolean">
</parameter>
<parameter name="match_whole_word" type="boolean">
</parameter>
<parameter name="search_up" type="boolean">
</parameter>
<parameter name="reg_exp" type="boolean">
</parameter>
</method>
<method name="findText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="search_str" type="java.lang.String">
</parameter>
<parameter name="match_case" type="boolean">
</parameter>
<parameter name="match_whole_word" type="boolean">
</parameter>
<parameter name="search_up" type="boolean">
</parameter>
<parameter name="reg_exp" type="boolean">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getAllCanvasPixelSizes"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAnnotTypeUnder"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="getAnnotationAt"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
</method>
<method name="getAnnotationAt"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="distanceThreshold" type="double">
</parameter>
<parameter name="minimumLineWeight" type="double">
</parameter>
</method>
<method name="getAnnotationListAt"
 return="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="int">
</parameter>
<parameter name="y1" type="int">
</parameter>
<parameter name="x2" type="int">
</parameter>
<parameter name="y2" type="int">
</parameter>
</method>
<method name="getAnnotationsOnPage"
 return="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getCanvasHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCanvasWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getClientBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContentSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int[]">
</parameter>
</method>
<method name="getCurCanvasId"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentMousePosition"
 return="android.graphics.PointF"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDeviceTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDeviceTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getDirectionalLockEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExternalAnnotManager"
 return="com.pdftron.pdf.ExternalAnnotManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="NullPointerException" type="java.lang.NullPointerException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHScrollPos"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLinkAt"
 return="com.pdftron.pdf.PDFViewCtrl.LinkInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLongPressEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNextRedoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextUndoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGContext"
 return="com.pdftron.pdf.ocg.Context"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageBox"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNumberFromScreenPt"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="getPagePresentationMode"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageRectForAnnot"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageRefViewMode"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageSlidingCanvasTransform"
 return="android.graphics.Matrix"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageViewMode"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPostProcessedColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cp" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="getPreferredViewMode"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProgressiveRendering"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRightToLeftLanguage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScreenRectForAnnot"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScrollOffsetForCanvasId"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvasId" type="int">
</parameter>
</method>
<method name="getScrollXOffsetInTools"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="getScrollYOffsetInTools"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="getSelection"
 return="com.pdftron.pdf.PDFViewCtrl.Selection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="int">
</parameter>
</method>
<method name="getSelectionBeginPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectionEndPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSlidingScrollY"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThumbAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getToolManager"
 return="com.pdftron.pdf.PDFViewCtrl.ToolManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVScrollPos"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViewCanvasHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViewCanvasWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVisiblePages"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVisiblePagesInTransition"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getZoom"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getZoomEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getZoomForViewMode"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="viewMode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="gotoFirstPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoLastPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoNextPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoNextPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="animation" type="boolean">
</parameter>
</method>
<method name="gotoPreviousPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoPreviousPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="animation" type="boolean">
</parameter>
</method>
<method name="hasSelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasSelectionOnPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="int">
</parameter>
</method>
<method name="hideAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="isContinuousPagePresentationMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode">
</parameter>
</method>
<method name="isCurrentSlidingCanvas"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="isFacingPagePresentationMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode">
</parameter>
</method>
<method name="isFinishedRendering"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinishedRendering"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visible_region_only" type="boolean">
</parameter>
</method>
<method name="isMaintainZoomEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSlidingWhileZoomed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isThereTextInRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="isUndoRedoEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isZoomingInAddingAnnotationEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="jumpToAnnotWithID"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotId" type="java.lang.String">
</parameter>
</method>
<method name="onConfigurationChanged"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="newConfig" type="android.content.res.Configuration">
</parameter>
</method>
<method name="onDoubleTap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDoubleTapEvent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onFling"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e1" type="android.view.MotionEvent">
</parameter>
<parameter name="e2" type="android.view.MotionEvent">
</parameter>
<parameter name="x_vel" type="float">
</parameter>
<parameter name="y_vel" type="float">
</parameter>
</method>
<method name="onFlingStop"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="onLayout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="changed" type="boolean">
</parameter>
<parameter name="l" type="int">
</parameter>
<parameter name="t" type="int">
</parameter>
<parameter name="r" type="int">
</parameter>
<parameter name="b" type="int">
</parameter>
</method>
<method name="onLongPress"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onScale"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="detector" type="android.view.ScaleGestureDetector">
</parameter>
</method>
<method name="onScaleBegin"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="detector" type="android.view.ScaleGestureDetector">
</parameter>
</method>
<method name="onScaleEnd"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="detector" type="android.view.ScaleGestureDetector">
</parameter>
</method>
<method name="onScroll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e1" type="android.view.MotionEvent">
</parameter>
<parameter name="e2" type="android.view.MotionEvent">
</parameter>
<parameter name="x_dist" type="float">
</parameter>
<parameter name="y_dist" type="float">
</parameter>
</method>
<method name="onShowPress"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onSingleTapConfirmed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onSingleTapUp"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onUp"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
<parameter name="priorEventMode" type="com.pdftron.pdf.PDFViewCtrl.PriorEventMode">
</parameter>
</method>
<method name="openNonPDFUri"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fileUri" type="android.net.Uri">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="FileNotFoundException" type="java.io.FileNotFoundException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="openPDFUri"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fileUri" type="android.net.Uri">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="FileNotFoundException" type="java.io.FileNotFoundException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="openUniversalDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="conversion" type="com.pdftron.pdf.DocumentConversion">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="openUrlAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<parameter name="cachePdf" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.PDFViewCtrl.HTTPRequestOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pause"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="postCustomEvent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="java.lang.Object">
</parameter>
</method>
<method name="prepareAnnotsForMouse"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="prepareAnnotsForMouse"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
<parameter name="distanceThreshold" type="double">
</parameter>
<parameter name="minimumLineWeight" type="double">
</parameter>
</method>
<method name="prepareWords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="purgeMemory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="purgeMemoryDueToOOM"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="redo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAndUpdate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="view_change" type="com.pdftron.pdf.ViewChangeCollection">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeDocumentDownloadListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.DocumentDownloadListener">
</parameter>
</method>
<method name="removeDocumentLoadListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.DocumentLoadListener">
</parameter>
</method>
<method name="removeOnCanvasSizeChangeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.OnCanvasSizeChangeListener">
</parameter>
</method>
<method name="removePageChangeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.PageChangeListener">
</parameter>
</method>
<method name="removeThumbAsyncListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.ThumbAsyncListener">
</parameter>
</method>
<method name="removeUniversalDocumentConversionListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.UniversalDocumentConversionListener">
</parameter>
</method>
<method name="requestRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="resume"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="revertAllChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotateClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rotateCounterClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="select"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="select"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="page1" type="int">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<parameter name="page2" type="int">
</parameter>
</method>
<method name="selectAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="selectAndJumpWithHighlights"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlights" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="selectByRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="selectByStructWithSmartSnapping"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="selectWithHighlights"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlights" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="selectWithSelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sel" type="com.pdftron.pdf.PDFViewCtrl.Selection">
</parameter>
</method>
<method name="setActionCompletedListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.ActionCompletedListener">
</parameter>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBuiltInPageSlidingAnimationDuration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="animationDuration" type="int">
</parameter>
</method>
<method name="setBuiltInPageSlidingEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setBuiltInPageSlidingThreshSpeed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fling_dp_per_second" type="int">
</parameter>
</method>
<method name="setBuiltInZoomAnimationDuration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="animationDuration" type="int">
</parameter>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setClientBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<parameter name="g" type="int">
</parameter>
<parameter name="b" type="int">
</parameter>
<parameter name="transparent" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessColors"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="whiteColor" type="int">
</parameter>
<parameter name="blackColor" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMapFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_file_contents" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrentPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="setDebug"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="debug" type="boolean">
</parameter>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<parameter name="g" type="int">
</parameter>
<parameter name="b" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDevicePixelDensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<parameter name="scale_factor" type="double">
</parameter>
</method>
<method name="setDirectionalLockEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setDoc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setErrorReportListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.ErrorReportListener">
</parameter>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHorizontalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="align" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInteractionEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setLongPressEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
</method>
<method name="setMaintainZoomEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMinimumRefZoomForMaximumZoomLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="required_zoom" type="double">
</parameter>
</method>
<method name="setNextOnLayoutAdjustments"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="extra_scroll_x" type="int">
</parameter>
<parameter name="extra_scroll_y" type="int">
</parameter>
<parameter name="animateZoomLimitsIfNecessary" type="boolean">
</parameter>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="overprint" type="com.pdftron.pdf.PDFViewCtrl.OverPrintMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageBorderVisibility"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="borderVisibility" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="region" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPagePresentationMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode">
</parameter>
</method>
<method name="setPageRefViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horiz_col_space" type="int">
</parameter>
<parameter name="vert_col_space" type="int">
</parameter>
<parameter name="horiz_pad" type="int">
</parameter>
<parameter name="vert_pad" type="int">
</parameter>
</method>
<method name="setPageSpacingDP"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horiz_col_space" type="int">
</parameter>
<parameter name="vert_col_space" type="int">
</parameter>
<parameter name="horiz_pad" type="int">
</parameter>
<parameter name="vert_pad" type="int">
</parameter>
</method>
<method name="setPageTransparencyGrid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trans_grid_visible" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
</method>
<method name="setPageViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="animate" type="boolean">
</parameter>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path_hinting" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferredViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="viewMode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
</method>
<method name="setProgressiveRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="progressive" type="boolean">
</parameter>
</method>
<method name="setProgressiveRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="progressive" type="boolean">
</parameter>
<parameter name="delay_ms" type="int">
</parameter>
<parameter name="interval_ms" type="int">
</parameter>
</method>
<method name="setRelativeZoomLimits"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="refViewMode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
<parameter name="min_zoom" type="double">
</parameter>
<parameter name="max_zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderedContentCacheSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="allowed_max" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderingListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.RenderingListener">
</parameter>
</method>
<method name="setRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextSearchListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.TextSearchListener">
</parameter>
</method>
<method name="setTextSelectionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.TextSelectionMode">
</parameter>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setToolManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mgr" type="com.pdftron.pdf.PDFViewCtrl.ToolManager">
</parameter>
</method>
<method name="setUniversalDocumentProgressIndicatorListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PDFViewCtrl.UniversalDocumentProgressIndicatorListener">
</parameter>
</method>
<method name="setUrlExtraction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
</method>
<method name="setVerticalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="align" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewerCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document" type="com.pdftron.sdf.SDFDoc">
</parameter>
<parameter name="max_cache_size" type="int">
</parameter>
<parameter name="on_disk" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="zoom" type="double">
</parameter>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="zoom" type="double">
</parameter>
<parameter name="use_snapshot" type="boolean">
</parameter>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="zoom" type="double">
</parameter>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<parameter name="use_snapshot" type="boolean">
</parameter>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<parameter name="use_snapshot" type="boolean">
</parameter>
<parameter name="animate" type="boolean">
</parameter>
</method>
<method name="setZoomEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
</method>
<method name="setZoomLimits"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="zoomLimitMode" type="com.pdftron.pdf.PDFViewCtrl.ZoomLimitMode">
</parameter>
<parameter name="min_zoom" type="double">
</parameter>
<parameter name="max_zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setZoomingInAddingAnnotationEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setupThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_embedded" type="boolean">
</parameter>
<parameter name="generate_at_runtime" type="boolean">
</parameter>
<parameter name="use_disk_cache" type="boolean">
</parameter>
<parameter name="thumb_max_side_length" type="int">
</parameter>
<parameter name="max_abs_cache_size" type="long">
</parameter>
<parameter name="max_perc_cache_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="showAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="showRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="smartZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
</method>
<method name="smartZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="animate" type="boolean">
</parameter>
</method>
<method name="takeUndoSnapshot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="meta_info" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="turnPageInNonContinuousMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="currentPage" type="int">
</parameter>
<parameter name="nextPage" type="boolean">
</parameter>
</method>
<method name="undo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="all" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rec" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="updateOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="updatePageLayout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="waitForRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
</method>
<method name="waitForRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="wereAnnotsForMousePrepared"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<method name="wereWordsPrepared"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageNum" type="int">
</parameter>
</method>
<field name="DEFAULT_BG_COLOR"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_DARK_BG_COLOR"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SCROLL_ZOOM_FACTOR"
 type="double"
 transient="false"
 volatile="false"
 value="1.5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="mDoc"
 type="com.pdftron.pdf.PDFDoc"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="mDocumentConversionFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<interface name="PDFViewCtrl.ActionCompletedListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onActionCompleted"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
</method>
</interface>
<class name="PDFViewCtrl.ConversionState"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.ConversionState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.ConversionState[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.DocumentDownloadListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onDownloadEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="com.pdftron.pdf.PDFViewCtrl.DownloadState">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="page_downloaded" type="int">
</parameter>
<parameter name="page_count" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
</interface>
<interface name="PDFViewCtrl.DocumentLoadListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onDocumentLoaded"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="PDFViewCtrl.DownloadState"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.DownloadState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.DownloadState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="downloadMode" type="int">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.DownloadState[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.ErrorReportListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onErrorReportEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
</interface>
<class name="PDFViewCtrl.HTTPRequestOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HTTPRequestOptions"
 type="com.pdftron.pdf.PDFViewCtrl.HTTPRequestOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addHeader"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="header" type="java.lang.String">
</parameter>
<parameter name="val" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFViewCtrl.LinkInfo"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getURL"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.OnCanvasSizeChangeListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onCanvasSizeChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="PDFViewCtrl.OverPrintMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.OverPrintMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.OverPrintMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.PageChangeListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onPageChange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_page" type="int">
</parameter>
<parameter name="cur_page" type="int">
</parameter>
<parameter name="state" type="com.pdftron.pdf.PDFViewCtrl.PageChangeState">
</parameter>
</method>
</interface>
<class name="PDFViewCtrl.PageChangeState"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PageChangeState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PageChangeState[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.PagePresentationMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pagePresentationMode" type="int">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.PageViewMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pageViewMode" type="int">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.PriorEventMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PriorEventMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PriorEventMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.RenderingListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onRenderingFinished"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onRenderingStarted"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="PDFViewCtrl.Selection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAsHtml"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsUnicode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.TextSearchListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onTextSearchEnd"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="result" type="com.pdftron.pdf.PDFViewCtrl.TextSearchResult">
</parameter>
</method>
<method name="onTextSearchProgress"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="progress" type="int">
</parameter>
</method>
<method name="onTextSearchStart"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="PDFViewCtrl.TextSearchResult"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.TextSearchResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.TextSearchResult[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.TextSelectionMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.TextSelectionMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.TextSelectionMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PDFViewCtrl.ThumbAsyncListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onThumbReceived"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="int">
</parameter>
<parameter name="buf" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
</interface>
<interface name="PDFViewCtrl.ToolManager"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isCreatingAnnotation"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onChangePointerIcon"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pointerIcon" type="android.view.PointerIcon">
</parameter>
</method>
<method name="onClose"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onConfigurationChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="newConfig" type="android.content.res.Configuration">
</parameter>
</method>
<method name="onControlReady"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCustomEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onDocumentDownloadEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="com.pdftron.pdf.PDFViewCtrl.DownloadState">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="page_downloaded" type="int">
</parameter>
<parameter name="page_count" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
<method name="onDoubleTap"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDoubleTapEnd"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDoubleTapEvent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDoubleTapZoomAnimationBegin"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onDoubleTapZoomAnimationEnd"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onDown"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onDraw"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvas" type="android.graphics.Canvas">
</parameter>
<parameter name="tfm" type="android.graphics.Matrix">
</parameter>
</method>
<method name="onDrawEdgeEffects"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvas" type="android.graphics.Canvas">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="verticalOffset" type="int">
</parameter>
</method>
<method name="onFlingStop"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onGenericMotionEvent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onKeyUp"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyCode" type="int">
</parameter>
<parameter name="event" type="android.view.KeyEvent">
</parameter>
</method>
<method name="onLayout"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="changed" type="boolean">
</parameter>
<parameter name="l" type="int">
</parameter>
<parameter name="t" type="int">
</parameter>
<parameter name="r" type="int">
</parameter>
<parameter name="b" type="int">
</parameter>
</method>
<method name="onLongPress"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onMove"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e1" type="android.view.MotionEvent">
</parameter>
<parameter name="e2" type="android.view.MotionEvent">
</parameter>
<parameter name="x_dist" type="float">
</parameter>
<parameter name="y_dist" type="float">
</parameter>
</method>
<method name="onPageTurning"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_page" type="int">
</parameter>
<parameter name="cur_page" type="int">
</parameter>
</method>
<method name="onPointerDown"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onPostSingleTapConfirmed"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onPullEdgeEffects"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="which_edge" type="int">
</parameter>
<parameter name="delta_distance" type="float">
</parameter>
</method>
<method name="onReleaseEdgeEffects"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onRenderingFinished"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onScale"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="float">
</parameter>
<parameter name="y" type="float">
</parameter>
</method>
<method name="onScaleBegin"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="float">
</parameter>
<parameter name="y" type="float">
</parameter>
</method>
<method name="onScaleEnd"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="float">
</parameter>
<parameter name="y" type="float">
</parameter>
</method>
<method name="onScrollChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="int">
</parameter>
<parameter name="t" type="int">
</parameter>
<parameter name="oldl" type="int">
</parameter>
<parameter name="oldt" type="int">
</parameter>
</method>
<method name="onSetDoc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onShowPress"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onSingleTapConfirmed"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onSingleTapUp"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
</method>
<method name="onUp"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="android.view.MotionEvent">
</parameter>
<parameter name="priorEventMode" type="com.pdftron.pdf.PDFViewCtrl.PriorEventMode">
</parameter>
</method>
</interface>
<interface name="PDFViewCtrl.UniversalDocumentConversionListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onConversionEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="com.pdftron.pdf.PDFViewCtrl.ConversionState">
</parameter>
<parameter name="totalPagesConverted" type="int">
</parameter>
</method>
</interface>
<interface name="PDFViewCtrl.UniversalDocumentProgressIndicatorListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onAddProgressIndicator"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onPositionProgressIndicatorPage"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="position" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="onProgressIndicatorPageVisibilityChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="isVisible" type="boolean">
</parameter>
</method>
<method name="onRemoveContentPendingIndicator"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onRemoveProgressIndicator"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onShowContentPendingIndicator"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="PDFViewCtrl.ZoomLimitMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.ZoomLimitMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.ZoomLimitMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Page"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Page"
 type="com.pdftron.pdf.Page"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Page"
 type="com.pdftron.pdf.Page"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addRotations"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r0" type="int">
</parameter>
<parameter name="r1" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotPushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotPushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="degreeToRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findInheritedAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenField"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAnnot"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAnnots"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContents"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCropBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flip_y" type="boolean">
</parameter>
<parameter name="box_type" type="int">
</parameter>
<parameter name="rot_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIndex"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMediaBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumAnnots"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResourceDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThumb"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getThumbInfo"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUserUnitSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibleContentBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTransition"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotationToDegree"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="scale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCropBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMediaBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rot_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUserUnitSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unit_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="subtractRotations"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r0" type="int">
</parameter>
<parameter name="r1" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_0"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_180"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_270"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_90"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_page_close"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_page_open"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_art"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bleed"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_crop"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_media"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trim"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_user_crop"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PageIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PageLabel"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="first_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="first_page" type="int">
</parameter>
<parameter name="last_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLabelTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStart"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefix" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStart"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_alphabetic_lowercase"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_alphabetic_uppercase"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_decimal"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_roman_lowercase"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_roman_uppercase"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PageSet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="one_page" type="int">
</parameter>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="one_page" type="int">
</parameter>
</method>
<method name="addRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
</method>
<method name="addRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_all"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_even"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_odd"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PathData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PathData"
 type="com.pdftron.pdf.PathData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defined" type="boolean">
</parameter>
<parameter name="operators" type="byte[]">
</parameter>
<parameter name="data_points" type="double[]">
</parameter>
</constructor>
<method name="getOperators"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPoints"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isDefined"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setOperators"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operators" type="byte[]">
</parameter>
</method>
<method name="setPoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="points" type="double[]">
</parameter>
</method>
<field name="e_closepath"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_conicto"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_cubicto"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lineto"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_moveto"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rect"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PatternColor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PatternColor"
 type="com.pdftron.pdf.PatternColor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShading"
 return="com.pdftron.pdf.Shading"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTilingType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getXStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getYStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_colored_tiling_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_constant_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_constant_spacing_fast_fill"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_distortion"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_shading"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_uncolored_tiling_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Point"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Point"
 type="com.pdftron.pdf.Point"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Point"
 type="com.pdftron.pdf.Point"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</constructor>
<field name="x"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="y"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PreviewHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PreviewHandler"
 type="com.pdftron.pdf.PreviewHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.PreviewHandler.PreviewHandlerCallback">
</parameter>
</constructor>
<method name="removeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="DOCUMENT_PREVIEW_RESULT_CANCEL"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_FAILURE"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_NOT_FOUNT"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_PACKAGE_ERROR"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_POSTPONED"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_PREVIOUS_CRASH"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_SECURITY_ERROR"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DOCUMENT_PREVIEW_RESULT_SUCCESS"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="PreviewHandler.PreviewHandlerCallback"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="PreviewHandlerProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="result" type="int">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Print"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Print"
 type="com.pdftron.pdf.Print"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addPrintListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.Print.PrintCallback">
</parameter>
</method>
<method name="clearPrintListeners"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="exportAnnotations"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="inputDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="isRtl" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removePrintListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.Print.PrintCallback">
</parameter>
</method>
<method name="startPrintJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="inputDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="printContent" type="java.lang.Integer">
</parameter>
<parameter name="isRtl" type="java.lang.Boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="startPrintJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="printContent" type="java.lang.Integer">
</parameter>
<parameter name="isRtl" type="java.lang.Boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="PRINT_CONTENT_ANNOTATION_BIT"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PRINT_CONTENT_DOCUMENT_BIT"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PRINT_CONTENT_SUMMARY_BIT"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Print.Compat"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Compat"
 type="com.pdftron.pdf.Print.Compat"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="Format"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sourceDoc" type="long">
</parameter>
<parameter name="pageSet" type="long">
</parameter>
<parameter name="destDoc" type="long">
</parameter>
<parameter name="options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="Print.PrintCallback"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onPrintCancelled"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onPrintCompleted"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pagesCount" type="int">
</parameter>
<parameter name="copiesCount" type="int">
</parameter>
</method>
<method name="onPrintFailed"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ProgressMonitor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRangeFinish"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRangeStart"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="offsetPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="int">
</parameter>
</method>
<method name="setPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
</method>
<method name="setRange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start" type="int">
</parameter>
<parameter name="finish" type="int">
</parameter>
</method>
<method name="setStep"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nstep" type="int">
</parameter>
</method>
<method name="stepIt"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="QuadPoint"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="QuadPoint"
 type="com.pdftron.pdf.QuadPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="QuadPoint"
 type="com.pdftron.pdf.QuadPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p3" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p4" type="com.pdftron.pdf.Point">
</parameter>
</constructor>
<field name="p1"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p2"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p3"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p4"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Rect"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="com.pdftron.helpers.DoubleRectangle2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="contains"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="get"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRectangle"
 return="com.pdftron.helpers.DoubleRectangle2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getX1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getX2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getY1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getY2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="amount" type="double">
</parameter>
</method>
<method name="inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="intersectRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect1" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="rect2" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="normalize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="com.pdftron.helpers.DoubleRectangle2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setX1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setX2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setY1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="y1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setY2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Redactor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redactor"
 type="com.pdftron.pdf.Redactor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="redact"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="red_arr" type="com.pdftron.pdf.Redactor.Redaction[]">
</parameter>
<parameter name="app" type="com.pdftron.pdf.Redactor.Appearance">
</parameter>
<parameter name="ext_neg_mode" type="boolean">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Redactor.Appearance"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Appearance"
 type="com.pdftron.pdf.Redactor.Appearance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<field name="border"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="font"
 type="com.pdftron.pdf.Font"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="horizTextAlignment"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="maxFontSize"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="minFontSize"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="negativeOverlayColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="positiveOverlayColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="redactedContentColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="redactionOverlay"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="showRedactedContentRegions"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="textColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="useOverlayText"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="vertTextAlignment"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Redactor.Redaction"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redaction"
 type="com.pdftron.pdf.Redactor.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="bbox" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="negative" type="boolean">
</parameter>
<parameter name="text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ReflowProcessor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ReflowProcessor"
 type="com.pdftron.pdf.ReflowProcessor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="cancelAllRequests"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRequest"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="clearCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getReflow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.RequestHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isInitialized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RequestHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RequestHandler"
 type="com.pdftron.pdf.RequestHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.pdftron.pdf.RequestHandler.RequestHandlerCallback">
</parameter>
</constructor>
<method name="removeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="JOB_REQUEST_RESULT_CANCEL"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_FAILURE"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_PACKAGE_ERROR"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_POSTPONED"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_PREVIOUS_CRASH"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_SECURITY_ERROR"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="JOB_REQUEST_RESULT_SUCCESS"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
</class>
<class name="RequestHandler.JobRequestResult"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.RequestHandler.JobRequestResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.RequestHandler.JobRequestResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="result" type="int">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.RequestHandler.JobRequestResult[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="RequestHandler.RequestHandlerCallback"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="RequestHandlerProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="result" type="com.pdftron.pdf.RequestHandler.JobRequestResult">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<interface name="RequestRenderInWorkerThreadProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onRequestRenderInWorkerThreadProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Shading"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Shading"
 type="com.pdftron.pdf.Shading"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shading_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getAntialias"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackground"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t1" type="double">
</parameter>
<parameter name="t2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCoords"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCoordsRadial"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDomain"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParamEnd"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParamStart"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shading_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasBBox"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasBackground"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isExtendEnd"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isExtendStart"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_axial_shading"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_coons_shading"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_free_gouraud_shading"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_function_shading"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lattice_gouraud_shading"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radial_shading"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_tensor_shading"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Stamper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Stamper"
 type="com.pdftron.pdf.Stamper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
</constructor>
<method name="deleteStamps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="page_set" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasStamps"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="page_set" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="setAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_alignment" type="int">
</parameter>
<parameter name="vertical_alignment" type="int">
</parameter>
</method>
<method name="setAsAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="boolean">
</parameter>
</method>
<method name="setAsBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="background" type="boolean">
</parameter>
</method>
<method name="setFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
</method>
<method name="setFontColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="setOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
<parameter name="percentage" type="boolean">
</parameter>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rotation" type="double">
</parameter>
</method>
<method name="setSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
</method>
<method name="setTextAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_alignment" type="int">
</parameter>
</method>
<method name="showsOnPrint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_print" type="boolean">
</parameter>
</method>
<method name="showsOnScreen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_screen" type="boolean">
</parameter>
</method>
<method name="stampImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="stampPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="stampText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_txt" type="java.lang.String">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<field name="e_absolute_size"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_left"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_right"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font_size"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_left"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_right"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_relative_scale"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_bottom"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_top"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TempDoc"
 extends="com.pdftron.pdf.PDFDoc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TempDoc"
 type="com.pdftron.pdf.TempDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="TempDoc"
 type="com.pdftron.pdf.TempDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="TempDoc"
 type="com.pdftron.pdf.TempDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="TempDoc"
 type="com.pdftron.pdf.TempDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="invalidate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Text2PDFOptions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Text2PDFOptions"
 type="com.pdftron.pdf.Text2PDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBytesPerBite"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontFace"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineHeightMultiplier"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginBottom"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginLeft"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginRight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginTop"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseSourceCodeFormatting"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBytesPerBite"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontFace"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontSize"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineHeightMultiplier"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginBottom"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginLeft"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginRight"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginTop"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageHeight"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageWidth"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseSourceCodeFormatting"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TextExtractor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextExtractor"
 type="com.pdftron.pdf.TextExtractor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="clip_ptr" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="clip_ptr" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="flags" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dehyphen" type="boolean">
</parameter>
</method>
<method name="getAsXML"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsXML"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xml_output_flags" type="int">
</parameter>
</method>
<method name="getFirstLine"
 return="com.pdftron.pdf.TextExtractor.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumLines"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRightToLeftLanguage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextUnderAnnot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="getWordCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="right_2_left" type="boolean">
</parameter>
</method>
<field name="e_no_dup_remove"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_invisible_text"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_ligature_exp"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_output_bbox"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_output_style_info"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_punct_break"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_remove_hidden_text"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_words_as_elements"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextExtractor.Compat"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Compat"
 type="com.pdftron.pdf.TextExtractor.Compat"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="GetRightToLeftLanguage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="SetRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r2l" type="boolean">
</parameter>
</method>
</class>
<class name="TextExtractor.Line"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="endsWithHyphen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFirstWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFlowID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNextLine"
 return="com.pdftron.pdf.TextExtractor.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumWords"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParagraphID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="word_idx" type="int">
</parameter>
</method>
<method name="isSimpleLine"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextExtractor.Style"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColor"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getWeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextExtractor.Word"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCharStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_idx" type="int">
</parameter>
</method>
<method name="getCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGlyphQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="glyph_idx" type="int">
</parameter>
</method>
<method name="getNextWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumGlyphs"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStringLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextSearch"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSearch"
 type="com.pdftron.pdf.TextSearch"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="begin"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="pattern" type="java.lang.String">
</parameter>
<parameter name="mode" type="int">
</parameter>
<parameter name="start_page" type="int">
</parameter>
<parameter name="end_page" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="run"
 return="com.pdftron.pdf.TextSearchResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="java.lang.String">
</parameter>
</method>
<method name="setRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="boolean">
</parameter>
</method>
<field name="e_ambient_string"
 type="int"
 transient="false"
 volatile="false"
 value="64"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_case_sensitive"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_highlight"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_page_stop"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_reg_expression"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_search_up"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_whole_word"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextSearchResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSearchResult"
 type="com.pdftron.pdf.TextSearchResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cd" type="int">
</parameter>
<parameter name="pn" type="int">
</parameter>
<parameter name="rs" type="java.lang.String">
</parameter>
<parameter name="as" type="java.lang.String">
</parameter>
<parameter name="hlts_impl" type="long">
</parameter>
</constructor>
<method name="getAmbientStr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHighlights"
 return="com.pdftron.pdf.Highlights"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResultStr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_done"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_found"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_page"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="ThumbAsyncHandler"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="thumbAsyncHandlerProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="was_thumb_found" type="boolean">
</parameter>
<parameter name="thumb_buf" type="java.lang.Object">
</parameter>
<parameter name="thumb_width" type="int">
</parameter>
<parameter name="thumb_height" type="int">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="ViewChangeCollection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ViewChangeCollection"
 type="com.pdftron.pdf.ViewChangeCollection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="WebFontDownloader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clearCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="disableDownloads"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableDownloads"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="preCacheAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCustomWebFontURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="WordToPDFOptions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WordToPDFOptions"
 type="com.pdftron.pdf.WordToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="WordToPDFOptions"
 type="com.pdftron.pdf.WordToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getLayoutResourcesPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResourceDocPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmartSubstitutionPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLayoutResourcesPluginPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setResourceDocPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmartSubstitutionPluginPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.pdf.annots"
>
<class name="Caret"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Caret"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSymbol"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSymbol"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contt" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Circle"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Circle"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FileAttachment"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetFileSpec"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIconName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.FileAttachment"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.FileAttachment"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileSpec"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Graph"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Paperclip"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PushPin"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Tag"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FreeText"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.FreeText"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint1"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint2"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint3"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndingStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuaddingFormat"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCalloutLinePoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p3" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuaddingFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_qform" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_FreeText"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeTextCallout"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeTextTypeWriter"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Highlight"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Highlight"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Ink"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="GetPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Ink"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pt1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="pt2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erasePoints"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfObj" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="pt1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="pt2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBezierControlPoints"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="polyline" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPathCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmoothing"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlendMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="blendMode" type="com.pdftron.pdf.annots.Ink.BlendMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<parameter name="pt" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Ink.BlendMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.annots.Ink.BlendMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.annots.Ink.BlendMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Line"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCaptionPosition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineExtensionLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShowCaption"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStartPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStartStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextHOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextVOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaptionPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ep" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineExtensionLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setShowCaption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showCaption" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStartPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sp" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStartStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sst" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextHOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextVOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Butt"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Circle"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ClosedArrow"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Diamond"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Inline"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LineArrow"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LineDimension"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OpenArrow"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RClosedArrow"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ROpenArrow"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Slash"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Square"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Top"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Link"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Link"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Link"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_outline"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_push"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Markup"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBorderEffect"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderEffectIntensity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContentRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreationDates"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInteriorColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInteriorColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPadding"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPopup"
 return="com.pdftron.pdf.annots.Popup"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderEffect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="effect" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderEffectIntensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intensity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContentRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cr" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreationDates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInteriorColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rd" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="padding" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPopup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="popup" type="com.pdftron.pdf.annots.Popup">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Cloudy"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Movie"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Movie"
 type="com.pdftron.pdf.annots.Movie"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Movie"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isToBePlayed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setToBePlayed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="isplay" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PolyLine"
 extends="com.pdftron.pdf.annots.Line"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.PolyLine"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVertex"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVertexCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVertex"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="pt" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_PolyLineDimension"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PolygonCloud"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PolygonDimension"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Polygon"
 extends="com.pdftron.pdf.annots.PolyLine"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Polygon"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Popup"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Popup"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parent" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Redaction"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Redaction"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppFormXO"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverlayText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverlayTextAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadForm"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseRepeat"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppFormXO"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="formxo" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverlayText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverlayTextAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadForm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="form" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseRepeat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="repeat" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Centered"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LeftJustified"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RightJustified"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RubberStamp"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.RubberStamp"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCustom"
 return="com.pdftron.pdf.annots.RubberStamp"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="in_options" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Approved"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AsIs"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Confidential"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Departmental"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Draft"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Experimental"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Expired"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Final"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ForComment"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ForPublicRelease"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NotApproved"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NotForPublicRelease"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sold"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TopSecret"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Screen"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Screen"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Always"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Anamorphic"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CAboveI"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CBelowI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CLeftIRight"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_COverlayI"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CRightILeft"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Never"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoCaption"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoIcon"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Proportional"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenBigger"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenSmaller"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Sound"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Sound"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createWithData"
 return="com.pdftron.pdf.annots.Sound"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="data" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="bits_per_sample" type="int">
</parameter>
<parameter name="sample_rate" type="int">
</parameter>
<parameter name="num_channels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoundStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoundStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sound_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Mic"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Speaker"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Square"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Square"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Squiggly"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Squiggly"
 type="com.pdftron.pdf.annots.Squiggly"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Squiggly"
 type="com.pdftron.pdf.annots.Squiggly"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Squiggly"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StrikeOut"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StrikeOut"
 type="com.pdftron.pdf.annots.StrikeOut"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="StrikeOut"
 type="com.pdftron.pdf.annots.StrikeOut"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.StrikeOut"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Text"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Text"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Text"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="contents" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStateModel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStateModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="statemodule" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Comment"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Help"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Insert"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Key"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NewParagraph"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Note"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Paragraph"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextMarkup"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Underline"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Underline"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Watermark"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Watermark"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Widget"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Widget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Always"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Anamorphic"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CAboveI"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CBelowI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CLeftIRight"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_COverlayI"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CRightILeft"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Never"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoCaption"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoIcon"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Proportional"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenBigger"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenSmaller"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_outline"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_push"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.ocg"
>
<class name="Config"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Config"
 type="com.pdftron.pdf.ocg.Config"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocg_config" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="default_config" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitBaseState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitOffStates"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitOnStates"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLockedOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOrder"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitBaseState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitOffStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="off_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitOnStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLockedOCGs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked_ocg_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOrder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocgs_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Context"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Context"
 type="com.pdftron.pdf.ocg.Context"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Context"
 type="com.pdftron.pdf.ocg.Context"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Context"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOCMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="com.pdftron.pdf.ocg.Group">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="resetStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="all_on" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNonOCDrawing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="draw_non_OC" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCDrawMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oc_draw_mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="com.pdftron.pdf.ocg.Group">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_AllOC"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoOC"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_VisibleOC"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Group"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Group"
 type="com.pdftron.pdf.ocg.Group"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocg" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Group"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.Group"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrentState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitialState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasUsage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrentState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitialState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<parameter name="locked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCMD"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OCMD"
 type="com.pdftron.pdf.ocg.OCMD"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocmd" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.OCMD"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.OCMD"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="ocgs" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibilityExpression"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibilityPolicy"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVisibilityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_AllOff"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AllOn"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnyOff"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnyOn"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.pdfa"
>
<class name="PDFACompliance"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getError"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getErrorCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFAErrorMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObj"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<parameter name="obj_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObjCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAs"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Level1A"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level1B"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2A"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2B"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2U"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3A"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3B"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3U"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_0"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_1"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_2"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_3"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_4"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_5"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA11_0_0"
 type="int"
 transient="false"
 volatile="false"
 value="11000"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="1101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_2"
 type="int"
 transient="false"
 volatile="false"
 value="1102"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_3"
 type="int"
 transient="false"
 volatile="false"
 value="1103"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_11_1"
 type="int"
 transient="false"
 volatile="false"
 value="1111"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_11_2"
 type="int"
 transient="false"
 volatile="false"
 value="1112"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_1"
 type="int"
 transient="false"
 volatile="false"
 value="1121"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_10"
 type="int"
 transient="false"
 volatile="false"
 value="11210"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_2"
 type="int"
 transient="false"
 volatile="false"
 value="1122"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_3"
 type="int"
 transient="false"
 volatile="false"
 value="1123"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_4"
 type="int"
 transient="false"
 volatile="false"
 value="1124"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_5"
 type="int"
 transient="false"
 volatile="false"
 value="1125"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_6"
 type="int"
 transient="false"
 volatile="false"
 value="1126"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_13_1"
 type="int"
 transient="false"
 volatile="false"
 value="1131"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_13_5"
 type="int"
 transient="false"
 volatile="false"
 value="1135"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="121"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="122"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="123"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="131"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="132"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="133"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="134"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="141"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="142"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="161"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="171"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_2"
 type="int"
 transient="false"
 volatile="false"
 value="172"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_3"
 type="int"
 transient="false"
 volatile="false"
 value="173"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_4"
 type="int"
 transient="false"
 volatile="false"
 value="174"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="181"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_2"
 type="int"
 transient="false"
 volatile="false"
 value="182"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_3"
 type="int"
 transient="false"
 volatile="false"
 value="183"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_4"
 type="int"
 transient="false"
 volatile="false"
 value="184"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_5"
 type="int"
 transient="false"
 volatile="false"
 value="185"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_6"
 type="int"
 transient="false"
 volatile="false"
 value="186"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_7"
 type="int"
 transient="false"
 volatile="false"
 value="187"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="2101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_20"
 type="int"
 transient="false"
 volatile="false"
 value="21020"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_21"
 type="int"
 transient="false"
 volatile="false"
 value="21021"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="221"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_10"
 type="int"
 transient="false"
 volatile="false"
 value="2310"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="232"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="233"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="2331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="2332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="2341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="241"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="242"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_10"
 type="int"
 transient="false"
 volatile="false"
 value="24220"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_11"
 type="int"
 transient="false"
 volatile="false"
 value="24221"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_12"
 type="int"
 transient="false"
 volatile="false"
 value="24222"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_13"
 type="int"
 transient="false"
 volatile="false"
 value="24223"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_3"
 type="int"
 transient="false"
 volatile="false"
 value="243"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_4"
 type="int"
 transient="false"
 volatile="false"
 value="244"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="251"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_10"
 type="int"
 transient="false"
 volatile="false"
 value="2510"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_11"
 type="int"
 transient="false"
 volatile="false"
 value="2511"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_12"
 type="int"
 transient="false"
 volatile="false"
 value="2512"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_2"
 type="int"
 transient="false"
 volatile="false"
 value="252"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="261"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="271"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="281"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="2831"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="2832"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="2833"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="2834"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_5"
 type="int"
 transient="false"
 volatile="false"
 value="2835"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_9_1"
 type="int"
 transient="false"
 volatile="false"
 value="291"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="321"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="3331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="3332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="351"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_2"
 type="int"
 transient="false"
 volatile="false"
 value="352"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_3"
 type="int"
 transient="false"
 volatile="false"
 value="353"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_4"
 type="int"
 transient="false"
 volatile="false"
 value="354"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_5"
 type="int"
 transient="false"
 volatile="false"
 value="355"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_6"
 type="int"
 transient="false"
 volatile="false"
 value="356"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="361"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="371"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_2"
 type="int"
 transient="false"
 volatile="false"
 value="372"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_3"
 type="int"
 transient="false"
 volatile="false"
 value="373"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="381"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_1"
 type="int"
 transient="false"
 volatile="false"
 value="41"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_2"
 type="int"
 transient="false"
 volatile="false"
 value="42"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_3"
 type="int"
 transient="false"
 volatile="false"
 value="43"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_4"
 type="int"
 transient="false"
 volatile="false"
 value="44"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_5"
 type="int"
 transient="false"
 volatile="false"
 value="45"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_6"
 type="int"
 transient="false"
 volatile="false"
 value="46"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="521"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_10"
 type="int"
 transient="false"
 volatile="false"
 value="5210"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_11"
 type="int"
 transient="false"
 volatile="false"
 value="5211"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="522"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="523"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="524"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="525"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_6"
 type="int"
 transient="false"
 volatile="false"
 value="526"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_7"
 type="int"
 transient="false"
 volatile="false"
 value="527"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_8"
 type="int"
 transient="false"
 volatile="false"
 value="528"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_9"
 type="int"
 transient="false"
 volatile="false"
 value="529"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="531"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="5321"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="5322"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="5323"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="5324"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="5325"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="5331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="5332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="5333"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="5334"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="5341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="5342"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_3"
 type="int"
 transient="false"
 volatile="false"
 value="5343"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_10_0"
 type="int"
 transient="false"
 volatile="false"
 value="6100"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="6101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_1_1"
 type="int"
 transient="false"
 volatile="false"
 value="611"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_1_2"
 type="int"
 transient="false"
 volatile="false"
 value="612"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="621"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_5"
 type="int"
 transient="false"
 volatile="false"
 value="62115"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_6"
 type="int"
 transient="false"
 volatile="false"
 value="62116"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_7"
 type="int"
 transient="false"
 volatile="false"
 value="62117"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_8"
 type="int"
 transient="false"
 volatile="false"
 value="62118"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="622"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="623"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_9_1"
 type="int"
 transient="false"
 volatile="false"
 value="69001"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_9_3"
 type="int"
 transient="false"
 volatile="false"
 value="69003"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_1"
 type="int"
 transient="false"
 volatile="false"
 value="7111"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_2"
 type="int"
 transient="false"
 volatile="false"
 value="7112"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_3"
 type="int"
 transient="false"
 volatile="false"
 value="7113"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_4"
 type="int"
 transient="false"
 volatile="false"
 value="7114"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_5"
 type="int"
 transient="false"
 volatile="false"
 value="7115"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="721"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="722"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="723"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="724"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="725"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="731"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="732"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="733"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="734"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_5"
 type="int"
 transient="false"
 volatile="false"
 value="735"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_6"
 type="int"
 transient="false"
 volatile="false"
 value="736"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_7"
 type="int"
 transient="false"
 volatile="false"
 value="737"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_8"
 type="int"
 transient="false"
 volatile="false"
 value="738"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_9"
 type="int"
 transient="false"
 volatile="false"
 value="739"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="751"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="781"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_10"
 type="int"
 transient="false"
 volatile="false"
 value="7810"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_11"
 type="int"
 transient="false"
 volatile="false"
 value="7811"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_12"
 type="int"
 transient="false"
 volatile="false"
 value="7812"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_13"
 type="int"
 transient="false"
 volatile="false"
 value="7813"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_14"
 type="int"
 transient="false"
 volatile="false"
 value="7814"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_15"
 type="int"
 transient="false"
 volatile="false"
 value="7815"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_16"
 type="int"
 transient="false"
 volatile="false"
 value="7816"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_17"
 type="int"
 transient="false"
 volatile="false"
 value="7817"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_18"
 type="int"
 transient="false"
 volatile="false"
 value="7818"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_19"
 type="int"
 transient="false"
 volatile="false"
 value="7819"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_2"
 type="int"
 transient="false"
 volatile="false"
 value="782"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_20"
 type="int"
 transient="false"
 volatile="false"
 value="7820"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_21"
 type="int"
 transient="false"
 volatile="false"
 value="7821"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_22"
 type="int"
 transient="false"
 volatile="false"
 value="7822"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_23"
 type="int"
 transient="false"
 volatile="false"
 value="7823"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_24"
 type="int"
 transient="false"
 volatile="false"
 value="7824"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_25"
 type="int"
 transient="false"
 volatile="false"
 value="7825"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_26"
 type="int"
 transient="false"
 volatile="false"
 value="7826"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_27"
 type="int"
 transient="false"
 volatile="false"
 value="7827"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_28"
 type="int"
 transient="false"
 volatile="false"
 value="7828"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_29"
 type="int"
 transient="false"
 volatile="false"
 value="7829"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_3"
 type="int"
 transient="false"
 volatile="false"
 value="783"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_30"
 type="int"
 transient="false"
 volatile="false"
 value="7830"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_31"
 type="int"
 transient="false"
 volatile="false"
 value="7831"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_4"
 type="int"
 transient="false"
 volatile="false"
 value="784"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_5"
 type="int"
 transient="false"
 volatile="false"
 value="785"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_6"
 type="int"
 transient="false"
 volatile="false"
 value="786"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_7"
 type="int"
 transient="false"
 volatile="false"
 value="787"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_8"
 type="int"
 transient="false"
 volatile="false"
 value="788"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_9"
 type="int"
 transient="false"
 volatile="false"
 value="789"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_1"
 type="int"
 transient="false"
 volatile="false"
 value="81"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="822"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="8331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="8332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="8341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_1"
 type="int"
 transient="false"
 volatile="false"
 value="91"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_2"
 type="int"
 transient="false"
 volatile="false"
 value="92"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_3"
 type="int"
 transient="false"
 volatile="false"
 value="93"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_4"
 type="int"
 transient="false"
 volatile="false"
 value="94"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E1"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E1_1"
 type="int"
 transient="false"
 volatile="false"
 value="101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E3"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.struct"
>
<class name="AttrObj"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AttrObj"
 type="com.pdftron.pdf.struct.AttrObj"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getOwner"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ClassMap"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ClassMap"
 type="com.pdftron.pdf.struct.ClassMap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ContentItem"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContainingStm"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStmOwner"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_MCID"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_MCR"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OBJR"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RoleMap"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleMap"
 type="com.pdftron.pdf.struct.RoleMap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getDirectMap"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SElement"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SElement"
 type="com.pdftron.pdf.struct.SElement"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SElement"
 type="com.pdftron.pdf.struct.SElement"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getActualText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAlt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsContentItem"
 return="com.pdftron.pdf.struct.ContentItem"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsStructElem"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructTreeRoot"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasActualText"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasAlt"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTitle"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isContentItem"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="STree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="STree"
 type="com.pdftron.pdf.struct.STree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="struct_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="getClassMap"
 return="com.pdftron.pdf.struct.ClassMap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKid"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoleMap"
 return="com.pdftron.pdf.struct.RoleMap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.sdf"
>
<class name="DictIterator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="key"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="value"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Doc"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Doc"
 type="com.pdftron.sdf.Doc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="impl"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="NameTree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NameTree"
 type="com.pdftron.sdf.NameTree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name_tree" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="create"
 return="com.pdftron.sdf.NameTree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.sdf.NameTree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.NameTreeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.NameTreeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="NameTreeIterator"
 extends="com.pdftron.sdf.DictIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="NumberTree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NumberTree"
 type="com.pdftron.sdf.NumberTree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="number_tree" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="NumberTreeIterator"
 extends="com.pdftron.sdf.DictIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="Obj"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="__Create"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="eraseAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsPDFText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAt"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodedStream"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDictIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGenNum"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumber"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObjNum"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOffset"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawStream"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="decrypt" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawStreamLength"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insert"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="rect" type="com.pdftron.helpers.DoubleRectangle2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isArray"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isContainer"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isDict"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEqual"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="to" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFree"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isIndirect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLoaded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isMarked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNumber"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isStream"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isString"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBack"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.helpers.DoubleRectangle2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putNull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="rect" type="com.pdftron.helpers.DoubleRectangle2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rename"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_key" type="java.lang.String">
</parameter>
<parameter name="new_key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBool"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="b" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mark" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="n" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStreamData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="size"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_array"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bool"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dict"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_name"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_number"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stream"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_string"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ObjSet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ObjSet"
 type="com.pdftron.sdf.ObjSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFromJson"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SDFDoc"
 extends="com.pdftron.sdf.Doc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRef"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="canSaveToPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canSaveToPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clearMarks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableDiskCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_cache" type="boolean">
</parameter>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHeader"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHintStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLinearizationDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_num" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSecurityHandler"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasRepairedXRef"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="deep_copy" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObjs"
 return="com.pdftron.sdf.Obj[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObjs"
 return="com.pdftron.sdf.Obj[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<parameter name="exclusion_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFullSaveRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.sdf.SecurityHandler">
</parameter>
</method>
<method name="swap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_num1" type="long">
</parameter>
<parameter name="obj_num2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="xRefSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_compatibility"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_hex_strings"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_incremental"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_linearized"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_omit_xref"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_remove_unused"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
</class>
<class name="SDFDoc.SaveMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.sdf.SDFDoc.SaveMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.sdf.SDFDoc.SaveMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SecurityHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="crypt_type" type="int">
</parameter>
</constructor>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key_len" type="int">
</parameter>
<parameter name="enc_code" type="int">
</parameter>
</constructor>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="__Create"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRefHandle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="changeMasterPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="changeMasterPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
</method>
<method name="changeRevisionNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rev_num" type="int">
</parameter>
</method>
<method name="changeUserPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="changeUserPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
</method>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncryptionAlgorithmID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHandlerDocName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeyLength"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMasterPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermission"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
</method>
<method name="getRevisionNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.sdf.Obj">
</parameter>
</method>
<method name="isMasterPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isRC4"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isUserPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEncryptMetadata"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encrypt_metadata" type="boolean">
</parameter>
</method>
<method name="setModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_modified" type="boolean">
</parameter>
</method>
<method name="setPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="perm" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
</method>
<field name="e_AES"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AES_256"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RC4_128"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RC4_40"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_access_support"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_assemble_doc"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_doc_modify"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_doc_open"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_extract_content"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_forms"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_mod_annot"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_owner"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print_high"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="SignatureHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SignatureHandler"
 type="com.pdftron.sdf.SignatureHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="appendData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSignature"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
</api>
